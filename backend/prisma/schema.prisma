// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(uuid())
  email         String    @unique
  password      String
  name          String?
  role          UserRole  @default(USER)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  tickets       Ticket[]
  organizedEvents Event[]   @relation("EventOrganizer")
}

enum UserRole {
  USER
  ORGANIZER
  ADMIN
}

model Event {
  id          String    @id @default(uuid())
  title       String
  description String?
  date        DateTime
  endDate     DateTime?
  location    String
  imageUrl    String?
  organizerId String
  organizer   User      @relation("EventOrganizer", fields: [organizerId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  ticketTypes TicketType[]
  tickets     Ticket[]
}

model TicketType {
  id          String    @id @default(uuid())
  name        String
  description String?
  price       Float
  quantity    Int
  eventId     String
  event       Event     @relation(fields: [eventId], references: [id], onDelete: Cascade)
  tickets     Ticket[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Ticket {
  id           String    @id @default(uuid())
  userId       String
  user         User      @relation(fields: [userId], references: [id])
  eventId      String
  event        Event     @relation(fields: [eventId], references: [id])
  ticketTypeId String
  ticketType   TicketType @relation(fields: [ticketTypeId], references: [id])
  qrCode       String?
  isUsed       Boolean   @default(false)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}
